{"title":"Notebook Context","markdown":{"yaml":{"title":"Notebook Context","subtitle":"","description":"Post Description","date-modified":"10/05/2023","date-format":"DD/MM/YYYY","categories":["context","notebook","dbutils"],"toc":true,"toc-title":"Navigation","tags":["python","spark","basic"]},"headingText":"Summary","containsRefs":false,"markdown":"\n\n\n::: {.callout-note title=\"Beginner Tip\" appearance=\"simple\" }\nThis tip is part of the [basic tips series](../../#tag=basic) to level up your work with high impact, low effort changes.\n:::\n\n- Get Metadata & Context on your current notebook environment\n- User Credentials (email, IPs, azuread object ids)\n- Browser details & language\n- Cluster Ids\n\n# Code\n\n::: {.panel-tabset}\n\n## Python\n\n### Get Context Object\n```python\ndbutils.notebook.entry_point.getDbutils().notebook().getContext()\n\n```\n\n### Example: Get Notebook Path Property\n``` python\n\ndbutils.notebook.entry_point.getDbutils().notebook().getContext() \\\n  .notebookPath() \\\n  .toString() \n\n\n```\n\n\n### Convert Context Json Object to Dictionary\n\n``` python\nimport json\njson.loads(dbutils.notebook.entry_point.getDbutils().notebook().getContext().toJson())\n```\n\n## Scala\n### Get Context Object\n\n```scala\ndbutils.notebook.getContext()\n\n```\n\n### Example: Get Notebook Path Property\n``` scala\n\ndbutils.notebook.getContext().notebookPath \\\n  .toString() \n\n\n```\n\n\n### Convert Json Object to Dictionary\n\n``` scala\nval context = dbutils.notebook.getContext() // Returns MAP[String,String] no need to map it\n\n```\n\n\n## R\n\nR doesn't have dbutils.notebook context object. However, there are several objects located in the R global environment which have properties from the databricks notebook context. We can view these by using the [LS](https://www.rdocumentation.org/packages/base/versions/3.6.2/topics/ls) command with pattern matching\n\n```r\n\n# List only the objects that begin with \"spark\"\nls(pattern = \"^spark\")\n\n```\n\n### Example: Get Notebook Path Property\n\n```r\n spark.databricks.api.url  \n\n```\n\n### Sample List of properties\n\n```r\n[1] \"spark.databricks.api.url\"                                              \n[2] \"spark.databricks.driverNfs.clusterWideVirtualEnv\"                      \n[3] \"spark.databricks.env\"                                                  \n[4] \"spark.databricks.inherited.credentials.keys.spark.databricks.api.token\"\n[5] \"spark.databricks.notebook.id\"                                          \n[6] \"spark.databricks.notebook.path\"                                        \n[7] \"spark.databricks.replId\"                                               \n[8] \"spark.databricks.token\"                                                \n[9] \"spark.scheduler.pool\"     \n[10] \"orgId\"\n\n\n```\n\n### Turn the spark variables into a Key Value list\n\n```R\n# Get the names of objects that begin with \"spark\"\nspark_names <- ls(pattern = \"^spark\")\n\n# Get the values of these objects\nspark_values <- mget(spark_names)\n\n# Convert the named vector to a list\nspark_list <- as.list(spark_values)\n\n\n\n\n```\n:::\n\n\n\n::: {.callout-caution title=\"Sample Output\" appearance=\"simple\" collapse=\"true\"}\nBelow is a sample object returned from the notebook context object (some details are sanitized for security) and this is not an exhaustive output of the context output\n\n\n```json \n\n{'rootRunId': None,\n 'currentRunId': None,\n 'jobGroup': '3390617077668218965_7460294295175766547_89e1d0119f914af39bafdb017336882e',\n 'tags': {'opId': 'ServerBackend-54787e706ebf268a',\n  'shardName': 'az-eastus-c3',\n  'opTarget': 'com.databricks.backend.common.rpc.InternalDriverBackendMessages$StartRepl',\n  'clusterMemory': '8192',\n  'serverBackendName': 'com.databricks.backend.daemon.driver.DriverCorral',\n  'notebookId': '2048538015852092',\n  'projectName': 'driver',\n  'tier': 'tier-multitenant',\n  'eventWindowTime': '2254196.899999991',\n  'httpTarget': '/notebook/2048538015852092/command/3362446343388373',\n  'commandRunId': 'dddd47ee-68fe-4fd2-9042-fbde8fd28a8e',\n  'buildHash': '',\n  'workspaceRoutingTarget': 'null',\n  'browserHash': '#notebook/2048538015852092/command/3362446343388373',\n  'host': '10.139.64.4',\n  'browserPathName': '/',\n  'notebookLanguage': 'sql',\n  'workspaceRoutingBucket': 'null',\n  'sparkVersion': '12.1.x-scala2.12',\n  'hostName': 'cons-webapp-0',\n  'httpMethod': 'POST',\n  'browserIdleTime': '411',\n  'jettyRpcJettyVersion': '9',\n  'browserLanguage': 'en-GB',\n  'browserTabId': '99fc6c79-18df-4ff9-b0e7-35df3da8bc08',\n  'sourceIpAddress': '<AN_IP>',\n  'loadedUiVersions': 'Map(monolith -> f03dcdb1e979dfefcf2f878284c318bd21970a5d)',\n  'browserUserAgent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/109.0.0.0 Safari/537.36',\n  'orgId': '2675080094955785',\n  'userAgent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/109.0.0.0 Safari/537.36',\n  'clusterId': '0120-154009-7bof0jyo',\n  'serverEventId': 'CgwIusXzngYQ9+mEqAIQgAQYiQE6EKeKn3/v7UOlvUQlALPm2wI=',\n  'rootOpId': 'ServiceMain-8ef19d61f07f0002',\n  'requestIdWasMissing': 'true',\n  'sessionId': 'd9be357a4121697a1de52d1c3b447874315900e2b5a5054b8aa92576f1e865be',\n  'clusterCreator': '<EMAIL_ADDRESS>',\n  'originatedFromEnvoy': 'true',\n  'clientBranchName': 'webapp_2023-01-27_23.45.48Z_master_b5b81920_1040710074',\n  'clientTimestamp': '1675421567053',\n  'clusterType': 'spot',\n  'requestId': 'CgwIusXzngYQ4/r7pwIQgAQYiQE6EKeKn3/v7UOlvUQlALPm2wI=',\n  'browserHasFocus': 'true',\n  'userId': '8925728005363108',\n  'browserIsHidden': 'false',\n  'principalIdpId': '<GUID>',\n  'clientLocale': 'en',\n  'branchName': 'webapp_2023-01-27_23.45.48Z_master_b5b81920_1040710074',\n  'opType': 'ServerBackend',\n  'sourcePortNumber': '0',\n  'user': '<EMAIL_ADDRESS>',\n  'principalIdpObjectId': '<GUID>',\n  'browserHostName': '<WORKSPACE>.azuredatabricks.net',\n  'parentOpId': 'RPCClient-8ef19d61f07f11ae',\n  'jettyRpcType': 'InternalDriverBackendMessages$DriverBackendRequest'},\n 'extraContext': {'allowStdin': 'true',\n  'non_uc_api_token': '',\n  'commandResultJsonMaxBytes': '20971520',\n  'notebook_path': '/sqlsdamples',\n  'thresholdForStoringInDbfs': '10000',\n  'enableStoringResultsInDbfs': 'true',\n  'api_url': 'https://eastus-c3.azuredatabricks.net',\n  'aclPathOfAclRoot': '/workspace/<ID>',\n  'api_token': '[REDACTED]'},\n 'credentialKeys': ['adls_aad_token',\n  'adls_gen2_aad_token',\n  'synapse_aad_token']}\n  \n  ```\n::: \n\n::: {.callout-tip title=\"Capture your current notebook cell\" appearance=\"simple\" }\nSee how you can use the [Notebook Context](context.qmd) to capture the [current cell of your notebook]() and leverage it in your applications and logs [here]()\n:::\n# Detail\n\nThe code snippet `dbutils.notebook.entry_point.getDbutils().notebook().getContext()` may appear intimidating at first glance, but fret not, let's break it down:\n\n1. **dbutils**: This is a utility library in Databricks, providing a collection of utility functions and classes that help in interacting with Databricks functionalities.\n\n2. **notebook**: This refers to the notebook module within `dbutils`, which contains methods for interacting with the notebook environment.\n\n3. **entry_point**: The `entry_point` attribute within the notebook module refers to the starting point of the notebook execution.\n\n4. **getDbutils**: This is a method call which returns an instance of `dbutils`.\n\n5. **notebook()**: This method call, following `getDbutils`, returns an instance of the notebook module.\n\n6. **getContext()**: Finally, this method retrieves the current Notebook Context, encapsulating information like notebook path, user, and other contextual details.\n\nBenefits of Accessing Notebook Context:\nAccessing the Notebook Context can serve various purposes:\n\n- **Identifying User Information**: By accessing the Notebook Context, you can retrieve information about the user executing the notebook. This could be useful for auditing or personalizing the notebook behavior based on the user.\n\n- **Fetching Notebook Path**: If your logic depends on the particular notebook or its location within the Databricks workspace, accessing the Notebook Context is invaluable.\n\n- **Managing Execution Flow**: Utilizing the Notebook Context can aid in managing the flow of notebook execution, especially in complex, multi-notebook workflows.\n\n\n\n## References & Further Reading\n\n\n### Related Tweets\n<blockquote class=\"twitter-tweet\" data-dnt=\"true\" data-theme=\"light\"><p lang=\"en\" dir=\"ltr\">‚ö† Productionising your <a href=\"https://twitter.com/databricks?ref_src=twsrc%5Etfw\">@Databricks</a> workloads<br><br>This is an essential tip to enhance your logging and monitoring‚Äº<br><br>‚ùîDid you know you can capture context &amp; metadata in <a href=\"https://twitter.com/hashtag/databricks?src=hash&amp;ref_src=twsrc%5Etfw\">#databricks</a> notebook? <br><br>Information such as<br>üìîCurrent Databricks notebook<br>‚õèJob Ids<br>üë©‚ÄçüíªUser<br>üåêBrowser &amp; moreüîΩ</p>&mdash; Daily Databricks (@DailyDatabricks) <a href=\"https://twitter.com/DailyDatabricks/status/1535319517609459715?ref_src=twsrc%5Etfw\">June 10, 2022</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script> \n\n\n","srcMarkdownNoYaml":"\n\n\n::: {.callout-note title=\"Beginner Tip\" appearance=\"simple\" }\nThis tip is part of the [basic tips series](../../#tag=basic) to level up your work with high impact, low effort changes.\n:::\n\n# Summary\n- Get Metadata & Context on your current notebook environment\n- User Credentials (email, IPs, azuread object ids)\n- Browser details & language\n- Cluster Ids\n\n# Code\n\n::: {.panel-tabset}\n\n## Python\n\n### Get Context Object\n```python\ndbutils.notebook.entry_point.getDbutils().notebook().getContext()\n\n```\n\n### Example: Get Notebook Path Property\n``` python\n\ndbutils.notebook.entry_point.getDbutils().notebook().getContext() \\\n  .notebookPath() \\\n  .toString() \n\n\n```\n\n\n### Convert Context Json Object to Dictionary\n\n``` python\nimport json\njson.loads(dbutils.notebook.entry_point.getDbutils().notebook().getContext().toJson())\n```\n\n## Scala\n### Get Context Object\n\n```scala\ndbutils.notebook.getContext()\n\n```\n\n### Example: Get Notebook Path Property\n``` scala\n\ndbutils.notebook.getContext().notebookPath \\\n  .toString() \n\n\n```\n\n\n### Convert Json Object to Dictionary\n\n``` scala\nval context = dbutils.notebook.getContext() // Returns MAP[String,String] no need to map it\n\n```\n\n\n## R\n\nR doesn't have dbutils.notebook context object. However, there are several objects located in the R global environment which have properties from the databricks notebook context. We can view these by using the [LS](https://www.rdocumentation.org/packages/base/versions/3.6.2/topics/ls) command with pattern matching\n\n```r\n\n# List only the objects that begin with \"spark\"\nls(pattern = \"^spark\")\n\n```\n\n### Example: Get Notebook Path Property\n\n```r\n spark.databricks.api.url  \n\n```\n\n### Sample List of properties\n\n```r\n[1] \"spark.databricks.api.url\"                                              \n[2] \"spark.databricks.driverNfs.clusterWideVirtualEnv\"                      \n[3] \"spark.databricks.env\"                                                  \n[4] \"spark.databricks.inherited.credentials.keys.spark.databricks.api.token\"\n[5] \"spark.databricks.notebook.id\"                                          \n[6] \"spark.databricks.notebook.path\"                                        \n[7] \"spark.databricks.replId\"                                               \n[8] \"spark.databricks.token\"                                                \n[9] \"spark.scheduler.pool\"     \n[10] \"orgId\"\n\n\n```\n\n### Turn the spark variables into a Key Value list\n\n```R\n# Get the names of objects that begin with \"spark\"\nspark_names <- ls(pattern = \"^spark\")\n\n# Get the values of these objects\nspark_values <- mget(spark_names)\n\n# Convert the named vector to a list\nspark_list <- as.list(spark_values)\n\n\n\n\n```\n:::\n\n\n\n::: {.callout-caution title=\"Sample Output\" appearance=\"simple\" collapse=\"true\"}\nBelow is a sample object returned from the notebook context object (some details are sanitized for security) and this is not an exhaustive output of the context output\n\n\n```json \n\n{'rootRunId': None,\n 'currentRunId': None,\n 'jobGroup': '3390617077668218965_7460294295175766547_89e1d0119f914af39bafdb017336882e',\n 'tags': {'opId': 'ServerBackend-54787e706ebf268a',\n  'shardName': 'az-eastus-c3',\n  'opTarget': 'com.databricks.backend.common.rpc.InternalDriverBackendMessages$StartRepl',\n  'clusterMemory': '8192',\n  'serverBackendName': 'com.databricks.backend.daemon.driver.DriverCorral',\n  'notebookId': '2048538015852092',\n  'projectName': 'driver',\n  'tier': 'tier-multitenant',\n  'eventWindowTime': '2254196.899999991',\n  'httpTarget': '/notebook/2048538015852092/command/3362446343388373',\n  'commandRunId': 'dddd47ee-68fe-4fd2-9042-fbde8fd28a8e',\n  'buildHash': '',\n  'workspaceRoutingTarget': 'null',\n  'browserHash': '#notebook/2048538015852092/command/3362446343388373',\n  'host': '10.139.64.4',\n  'browserPathName': '/',\n  'notebookLanguage': 'sql',\n  'workspaceRoutingBucket': 'null',\n  'sparkVersion': '12.1.x-scala2.12',\n  'hostName': 'cons-webapp-0',\n  'httpMethod': 'POST',\n  'browserIdleTime': '411',\n  'jettyRpcJettyVersion': '9',\n  'browserLanguage': 'en-GB',\n  'browserTabId': '99fc6c79-18df-4ff9-b0e7-35df3da8bc08',\n  'sourceIpAddress': '<AN_IP>',\n  'loadedUiVersions': 'Map(monolith -> f03dcdb1e979dfefcf2f878284c318bd21970a5d)',\n  'browserUserAgent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/109.0.0.0 Safari/537.36',\n  'orgId': '2675080094955785',\n  'userAgent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/109.0.0.0 Safari/537.36',\n  'clusterId': '0120-154009-7bof0jyo',\n  'serverEventId': 'CgwIusXzngYQ9+mEqAIQgAQYiQE6EKeKn3/v7UOlvUQlALPm2wI=',\n  'rootOpId': 'ServiceMain-8ef19d61f07f0002',\n  'requestIdWasMissing': 'true',\n  'sessionId': 'd9be357a4121697a1de52d1c3b447874315900e2b5a5054b8aa92576f1e865be',\n  'clusterCreator': '<EMAIL_ADDRESS>',\n  'originatedFromEnvoy': 'true',\n  'clientBranchName': 'webapp_2023-01-27_23.45.48Z_master_b5b81920_1040710074',\n  'clientTimestamp': '1675421567053',\n  'clusterType': 'spot',\n  'requestId': 'CgwIusXzngYQ4/r7pwIQgAQYiQE6EKeKn3/v7UOlvUQlALPm2wI=',\n  'browserHasFocus': 'true',\n  'userId': '8925728005363108',\n  'browserIsHidden': 'false',\n  'principalIdpId': '<GUID>',\n  'clientLocale': 'en',\n  'branchName': 'webapp_2023-01-27_23.45.48Z_master_b5b81920_1040710074',\n  'opType': 'ServerBackend',\n  'sourcePortNumber': '0',\n  'user': '<EMAIL_ADDRESS>',\n  'principalIdpObjectId': '<GUID>',\n  'browserHostName': '<WORKSPACE>.azuredatabricks.net',\n  'parentOpId': 'RPCClient-8ef19d61f07f11ae',\n  'jettyRpcType': 'InternalDriverBackendMessages$DriverBackendRequest'},\n 'extraContext': {'allowStdin': 'true',\n  'non_uc_api_token': '',\n  'commandResultJsonMaxBytes': '20971520',\n  'notebook_path': '/sqlsdamples',\n  'thresholdForStoringInDbfs': '10000',\n  'enableStoringResultsInDbfs': 'true',\n  'api_url': 'https://eastus-c3.azuredatabricks.net',\n  'aclPathOfAclRoot': '/workspace/<ID>',\n  'api_token': '[REDACTED]'},\n 'credentialKeys': ['adls_aad_token',\n  'adls_gen2_aad_token',\n  'synapse_aad_token']}\n  \n  ```\n::: \n\n::: {.callout-tip title=\"Capture your current notebook cell\" appearance=\"simple\" }\nSee how you can use the [Notebook Context](context.qmd) to capture the [current cell of your notebook]() and leverage it in your applications and logs [here]()\n:::\n# Detail\n\nThe code snippet `dbutils.notebook.entry_point.getDbutils().notebook().getContext()` may appear intimidating at first glance, but fret not, let's break it down:\n\n1. **dbutils**: This is a utility library in Databricks, providing a collection of utility functions and classes that help in interacting with Databricks functionalities.\n\n2. **notebook**: This refers to the notebook module within `dbutils`, which contains methods for interacting with the notebook environment.\n\n3. **entry_point**: The `entry_point` attribute within the notebook module refers to the starting point of the notebook execution.\n\n4. **getDbutils**: This is a method call which returns an instance of `dbutils`.\n\n5. **notebook()**: This method call, following `getDbutils`, returns an instance of the notebook module.\n\n6. **getContext()**: Finally, this method retrieves the current Notebook Context, encapsulating information like notebook path, user, and other contextual details.\n\nBenefits of Accessing Notebook Context:\nAccessing the Notebook Context can serve various purposes:\n\n- **Identifying User Information**: By accessing the Notebook Context, you can retrieve information about the user executing the notebook. This could be useful for auditing or personalizing the notebook behavior based on the user.\n\n- **Fetching Notebook Path**: If your logic depends on the particular notebook or its location within the Databricks workspace, accessing the Notebook Context is invaluable.\n\n- **Managing Execution Flow**: Utilizing the Notebook Context can aid in managing the flow of notebook execution, especially in complex, multi-notebook workflows.\n\n\n\n## References & Further Reading\n\n\n### Related Tweets\n<blockquote class=\"twitter-tweet\" data-dnt=\"true\" data-theme=\"light\"><p lang=\"en\" dir=\"ltr\">‚ö† Productionising your <a href=\"https://twitter.com/databricks?ref_src=twsrc%5Etfw\">@Databricks</a> workloads<br><br>This is an essential tip to enhance your logging and monitoring‚Äº<br><br>‚ùîDid you know you can capture context &amp; metadata in <a href=\"https://twitter.com/hashtag/databricks?src=hash&amp;ref_src=twsrc%5Etfw\">#databricks</a> notebook? <br><br>Information such as<br>üìîCurrent Databricks notebook<br>‚õèJob Ids<br>üë©‚ÄçüíªUser<br>üåêBrowser &amp; moreüîΩ</p>&mdash; Daily Databricks (@DailyDatabricks) <a href=\"https://twitter.com/DailyDatabricks/status/1535319517609459715?ref_src=twsrc%5Etfw\">June 10, 2022</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script> \n\n\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"markdown"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true,"format-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../styles.css"],"toc":true,"output-file":"context.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.3.433","editor":"visual","theme":{"light":"flatly","dark":"darkly"},"title":"Notebook Context","subtitle":"","description":"Post Description","date-modified":"10/05/2023","date-format":"DD/MM/YYYY","categories":["context","notebook","dbutils"],"toc-title":"Navigation","tags":["python","spark","basic"]},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}